[
  **Khởi tạo dự án sửa dụng Create React App và một số thư viện {
    - npx create-react-app nameProject
    - npm install customize-cra react-app-rewired --save-dev 
    - npm install --save-dev babel-plugin-module-resolver
    - npm install --save-dev sass
    - npm install --save normalize.css
    - npm install react-router-dom
    - npm install classnames
    - npm install @tippyjs/react
    - npm install axios
    - npm install react-icons --save
  }

  **Khởi tạo API NodeJS và một số thư viện {
    - express --view=hbs
    - npm i
    - npm i nodemon
    - npm i mongoose
    - npm i cors
    - npm i multer
    - npm i fs
    - npm i bcryptjs
    - npm i jsonwebtoken

    var mongoose = require('mongoose')
    mongoose.connect("mongodb://localhost:27017/name_project")
      .then ( () => console.log("Connect successful"))
      .catch ( (err) => console.log("Connect fail", err))

    var cors = require('cors');
    var corsOptionsDelegate = function (req, callback) {
      var corsOptions= { origin: true };
      callback(null, corsOptions);
    }

    app.use(cors(corsOptionsDelegate));
  }

  **Thêm File Ảnh trong NodeJS sử dụng thư viện multer {
    -- npm i multer

    var multer = require("multer");

    const storage = multer.diskStorage({
      destination: function (req, file, cb) {
        cb(null, "./public/images");
      },
      filename: function (req, file, cb) {
        cb(null, file.originalname);
      },
    });

    const checkfile = (req, file, cb) => {
      if (!file.originalname.match(/\.(jpg|png|jpeg|web)$/)) {
        return cb(new Error("Bạn chỉ được upload file ảnh"));
      }
      return cb(null, true);
    };

    const upload = multer({ storage: storage, fileFilter: checkfile });

    --  upload.single("image")
    --  upload.array("images")
  }

  **Xóa File Ảnh trong NodeJS sử dụng thư viện fs {
    -- npm i fs 
    
    var fs = require("fs");

    fs.unlink(`./public/images/${image}`, function (err) {
      if (err) return console.log(err);
      console.log("file deleted successfully");
    });
  }

  **Mã hóa mật khẩu trong NodeJS sử dụng thư viện bcryptjs {
    -- npm i bcryptjs 

    var bcryptjs = require("bcryptjs");

    const salt = bcryptjs.genSaltSync(10);
    const hash = bcryptjs.hashSync(password, salt);

    bcryptjs.compareSync(password, data.password)
  }
  
  **Cài đặt jsonserver {
    -- mkdir name_project
    -- cd name_project

    -- npm init -y
    -- npm install json-server

    Tạo file data.json 
    {
      "products": [
        { "id": 1, "name": "Product 1", "price": 10 },
        { "id": 2, "name": "Product 2", "price": 20 },
        { "id": 3, "name": "Product 3", "price": 30 }
      ]
    }

    -- json-server --watch data.json --port 3000
  }
]